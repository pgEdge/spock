SELECT * FROM spock_regress_variables()
\gset
\c :provider_dsn
SELECT * FROM spock.repset_create('parallel');
 repset_create 
---------------
    3827306560
(1 row)

\c :subscriber_dsn
-- FIXME: The statment below is commented out temporarily.
-- SELECT * FROM spock.sub_create(
--     subscription_name := 'test_subscription_parallel',
--     provider_dsn := (SELECT provider_dsn FROM spock_regress_variables()) || ' user=super',
-- 	replication_sets := '{parallel,default}',
-- 	forward_origins := '{}',
-- 	synchronize_structure := false,
-- 	synchronize_data := false
-- );
SELECT * FROM spock.sub_create(
    subscription_name := 'test_subscription_parallel',
    provider_dsn := (SELECT provider_dsn FROM spock_regress_variables()) || ' user=super',
	replication_sets := '{parallel}',
	forward_origins := '{}',
	synchronize_structure := false,
	synchronize_data := false
);
 sub_create 
------------
 4051189029
(1 row)

BEGIN;
SET LOCAL statement_timeout = '10s';
SELECT spock.sub_wait_for_sync('test_subscription_parallel');
 sub_wait_for_sync 
-------------------
 
(1 row)

COMMIT;
SELECT sync_kind, sync_subid, sync_nspname, sync_relname, sync_status IN ('y', 'r') FROM spock.local_sync_status ORDER BY 2,3,4;
 sync_kind | sync_subid | sync_nspname | sync_relname | ?column? 
-----------+------------+--------------+--------------+----------
 f         | 3848008564 |              |              | t
 i         | 4051189029 |              |              | t
(2 rows)

SELECT * FROM spock.sub_show_status();
     subscription_name      |   status    | provider_node |         provider_dsn         |                 slot_name                  |           replication_sets            | forward_origins 
----------------------------+-------------+---------------+------------------------------+--------------------------------------------+---------------------------------------+-----------------
 test_subscription          | replicating | test_provider | dbname=regression user=super | spk_postgres_test_provider_test_sube55bf37 | {default,default_insert_only,ddl_sql} | 
 test_subscription_parallel | replicating | test_provider | dbname=regression user=super | spk_postgres_test_provider_test_subf1783d2 | {parallel}                            | 
(2 rows)

-- Make sure we see the slot and active connection
\c :provider_dsn
SELECT plugin, slot_type, database, active FROM pg_replication_slots;
    plugin    | slot_type |  database  | active 
--------------+-----------+------------+--------
 spock_output | logical   | regression | t
 spock_output | logical   | regression | t
(2 rows)

SELECT count(*) FROM pg_stat_replication;
 count 
-------
     2
(1 row)

SELECT spock.replicate_ddl($$
    CREATE TABLE public.basic_dml1 (
        id serial primary key,
        other integer,
        data text,
        something interval
    );
    CREATE TABLE public.basic_dml2 (
        id serial primary key,
        other integer,
        data text,
        something interval
    );
$$);
 replicate_ddl 
---------------
 t
(1 row)

SELECT * FROM spock.repset_add_table('default', 'basic_dml1');
 repset_add_table 
------------------
 t
(1 row)

SELECT * FROM spock.repset_add_table('parallel', 'basic_dml2');
 repset_add_table 
------------------
 t
(1 row)

SELECT spock.wait_slot_confirm_lsn(NULL, NULL);
 wait_slot_confirm_lsn 
-----------------------
 
(1 row)

WITH one AS (
INSERT INTO basic_dml1(other, data, something)
VALUES (5, 'foo', '1 minute'::interval),
       (4, 'bar', '12 weeks'::interval),
       (3, 'baz', '2 years 1 hour'::interval),
       (2, 'qux', '8 months 2 days'::interval),
       (1, NULL, NULL)
RETURNING *
)
INSERT INTO basic_dml2 SELECT * FROM one;
BEGIN;
UPDATE basic_dml1 SET other = id, something = something - '10 seconds'::interval WHERE id < 3;
DELETE FROM basic_dml2 WHERE id < 3;
COMMIT;
SELECT spock.wait_slot_confirm_lsn(NULL, NULL);
 wait_slot_confirm_lsn 
-----------------------
 
(1 row)

SELECT * FROM basic_dml1;
 id | other | data |     something      
----+-------+------+--------------------
  3 |     3 | baz  | @ 2 years 1 hour
  4 |     2 | qux  | @ 8 mons 2 days
  5 |     1 |      | 
  1 |     1 | foo  | @ 50 secs
  2 |     2 | bar  | @ 84 days -10 secs
(5 rows)

SELECT * FROM basic_dml2;
 id | other | data |    something     
----+-------+------+------------------
  3 |     3 | baz  | @ 2 years 1 hour
  4 |     2 | qux  | @ 8 mons 2 days
  5 |     1 |      | 
(3 rows)

\c :subscriber_dsn
SELECT * FROM basic_dml1;
 id | other | data |     something      
----+-------+------+--------------------
  3 |     3 | baz  | @ 2 years 1 hour
  4 |     2 | qux  | @ 8 mons 2 days
  5 |     1 |      | 
  1 |     1 | foo  | @ 50 secs
  2 |     2 | bar  | @ 84 days -10 secs
(5 rows)

SELECT * FROM basic_dml2;
 id | other | data |    something     
----+-------+------+------------------
  3 |     3 | baz  | @ 2 years 1 hour
  4 |     2 | qux  | @ 8 mons 2 days
  5 |     1 |      | 
(3 rows)

SELECT spock.sub_drop('test_subscription_parallel');
 sub_drop 
----------
        1
(1 row)

\c :provider_dsn
\set VERBOSITY terse
SELECT * FROM spock.repset_drop('parallel');
 repset_drop 
-------------
 t
(1 row)

SELECT spock.replicate_ddl($$
    DROP TABLE public.basic_dml1 CASCADE;
    DROP TABLE public.basic_dml2 CASCADE;
$$);
NOTICE:  drop cascades to table basic_dml1 membership in replication set default
 replicate_ddl 
---------------
 t
(1 row)

